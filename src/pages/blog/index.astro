---
import { getCollection, getEntries } from 'astro:content'
import BlogLayout from '@layouts/BlogLayout.astro'
import Link from '@components/Link.astro'
import CategoryFilter from '@components/CategoryFilters.astro'
import CardArticle from '@components/CardArticle.astro'
import WithoutContent from '@components/WithoutContent.astro'

const pageTitle = 'allanjuarez.com | blog'

// Las content collections de Astro permiten recuperar datos de tres maneras:
// 1. getCollections() -> Obtiene una colecciÃ³n entera
// 2. getEntry() -> Recupera un elemento de una colecciÃ³n.
// 3. getEntries() -> Recupera uno o varios datos refenciados
const categories = (await getCollection('categories')).map((raw) => raw.data)

async function getArticles() {
  const rawArticles = await getCollection('articles')
  const articles = rawArticles.map(async raw => {
    const rawAuthors = await getEntries(raw.data.authors)
    return {
      id: raw.id,
      data: {
        ...raw.data,
        authors: [...rawAuthors],
      },
    }
  })

  return Promise.allSettled(articles).then(results => results)
}

const allArticles = await getArticles()
// const allArticles = (await getArticles()).map((art, _, arr) => {
//   arr[0].status = 'rejected'
//   return art
// })
---

<BlogLayout pageTitle={pageTitle}>
  <div>
    <CategoryFilter categories={categories} />
  </div>
  <section>
    <h1>Category</h1>
    <div>
      {
        allArticles &&
          allArticles.length !== 0 &&
          allArticles.map(results => {
            return results.status !== 'fulfilled' ? (
              <WithoutContent />
            ) : (
              <Link type='local' href={`/article/${results.value.id}`}>
                <CardArticle {...results.value.data} />
              </Link>
            )
          })
      }
    </div>
  </section>
</BlogLayout>
