---
import { Image } from 'astro:assets'
import ExternalSection from '@components/blog/ExternalSection.astro'
import ArticleSlider from '@components/blog/ArticleSlider.astro'
import Heading from '@components/blog/Heading.astro'
import Link from '@components/Link.astro'
import { formatPubDate } from '@utils/date'
import type { ImageMetadata } from 'astro'

interface Props {
  title: string
  pubDate: Date
  readingTime: any
  authors: any[]
  cover: {
    src: ImageMetadata
    alt: string
  }
  relatedArticles: RelatedArticles[] | []
}

interface RelatedArticles {
  id: string
  data: any
}

const {
  title = 'Article Title',
  pubDate,
  readingTime,
  authors = [{ id: 'allanjuarez' }],
  cover,
  relatedArticles,
} = Astro.props

const date = formatPubDate(new Date(pubDate), { locales: 'es-MX', style: { dateStyle: 'full' } })
---

<article id='LayoutArticle' class='relative overflow-hidden'>
  <div class='h-80 mb-8 flex justify-center'>
    <Image src={cover.src} alt={cover.alt} class='w-full h-full lg:px-16 xl:px-32 object-cover' />
  </div>
  <div class='max-w-[75ch] mx-auto px-4 pb-16'>
    <section class='mb-16 flex flex-col gap-4'>
      <Heading class='mb-2'>
        {title}
      </Heading>
      <div class='mb-2 flex flex-col gap-2 text-gray-400'>
        <div class='flex flex-col justify-center items-center gap-2'>
          <time datetime={pubDate.toISOString().split('T')[0]}>{date}</time>
          <span>{readingTime}</span>
        </div>
        <div class='flex justify-center items-center gap-2'>
          <span>Por</span>
          <div class='flex gap-[1ch]'>
            {
              authors.map(author => (
                <Link
                  type='external'
                  href={`https://www.linkedin.com/in/${author.id}/`}
                  class='font-medium text-base text-azure hover:underline'>{`@${author.id}`}</Link>
              ))
            }
          </div>
        </div>
      </div>
    </section>
    <section class='mb-32'>
      <slot />
    </section>
    {
      relatedArticles.length >= 1 && relatedArticles.some((article) => article) && (
        <ExternalSection>
          <h4 slot='title' class='mb-4 font-semibold text-md text-gray-50'>
            Art√≠culos que te pueden interesar
          </h4>
          <ArticleSlider slot='content' content={relatedArticles} />
        </ExternalSection>
      )
    }
  </div>
</article>

<script>
  import hljs from 'highlight.js'
  import 'highlight.js/styles/sunburst.css'

  const layoutArticle = document.querySelector('#LayoutArticle')
  const headings = layoutArticle?.querySelectorAll('.heading:not(h1)')

  // A cada elemento Heading se asigna un enlace ancla basandose al atributo href de su link interno generado por los plugins rehypeSlug y rehypeAutolinkHeadings.
  headings?.forEach(heading => {
    if (!heading) return

    const nameAnchor = heading.querySelector('a')?.getAttribute('href') || '#' + crypto.randomUUID()

    const anchor = document.createElement('a')
    anchor.setAttribute('name', `${nameAnchor?.split('#')[1]}`)

    heading.insertAdjacentElement('beforebegin', anchor)
  })

  // Da estilos globales a todos los elementos pre y block de este archivo.
  hljs.highlightAll()
</script>
